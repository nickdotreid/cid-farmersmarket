//- {{ volunteer }}
form.form(name='form', ng-submit='saveVolunteer(form)', novalidate, class='form-horizontal')

  .form-group
    label(for='fieldName', class='col-sm-2', control-label) Name
    .col-sm-10
      input#fieldName.form-control(type='text', name='name', ng-model='volunteer.name', required='')
    p.help-block(ng-show="form.name.$error.required" class="error") What's your name?

  //- TODO validate that e-mail isn't already taken
  //- see https://docs.angularjs.org/guide/forms, "Custom Validation" section
  .form-group
    label(for='fieldEmail', class='col-sm-2', control-label) Email
    .col-sm-10
      input#fieldEmail.form-control(type='email', name='email', ng-model='volunteer.email', ng-model-options='{ debounce: 500 }', required='', unique-email='true')
    p.help-block(ng-show="form.name.$error.required" class="error") What's your email address?
    p.help-block(ng-show="form.email.$error.email" class="error") This doesn't look like a valid e-mail address!
    //- TODO: unique-email relies on asynchronous validation which is not yet implemented in Angular 1.2.x
    p.help-block(ng-show="form.email.$error.uniqueEmail" class="error") Oops! This e-mail is already taken.
    //- {{ form.email.$error }}

  .form-group
    label(for='fieldPhone', class='col-sm-2', control-label) Phone
    .col-sm-10
      input#fieldPhone.form-control(type='text', name='phone', ng-model='volunteer.phone', ui-mask='(999) 999-9999', required='')
    p.help-block(ng-show="form.phone.$error.required" class="error") What's your phone number?
    p.help-block(ng-show="form.phone.$error.mask" class="error") Keep typing!
          
  //- p.help-block  {{ message }}

  .form-group.buttons
    .col-sm-offset-2.col-sm-10
      button.btn.btn-md.btn-success(ng-click='resetForm()', ng-disabled="!isFormChanged(volunteer)") Reset
      button.btn.btn-md.btn-primary(type='submit', ng-disabled="form.$invalid || !isFormChanged(volunteer)") Save changes
