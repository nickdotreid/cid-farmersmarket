div(ng-include='"components/navbar.html"')
.container
  h1 Change Contact Info

  form(role='form', name='contactInfoForm', ng-submit='changeContactInfo(contactInfoForm)', novalidate='', ng-controller='ContactInfoCtrl')

    .form-group
      label(for='fieldName', control-label) Name
      input#fieldName.form-control(type='text', name='name', ng-model='contactInfo.name', required='', placeholder="What's your name?")

    //- TODO validate that e-mail isn't already taken
    //- see https://docs.angularjs.org/guide/forms, "Custom Validation" section
    .form-group
      label(for='fieldEmail', control-label) Email
      input#fieldEmail.form-control(type='email', name='email', ng-model='contactInfo.email', ng-model-options='{ debounce: 500 }', required='', unique-email='true', placeholder="What's your email address?")
        
      //- TODO: unique-email relies on asynchronous validation which is not yet implemented in Angular 1.2.x
      p.help-block(ng-show="contactInfoForm.email.$error.email" class="error") This doesn't look like a valid e-mail address!
      p.help-block(ng-show="contactInfoForm.email.$error.uniqueEmail" class="error") Oops! This e-mail is already taken.
      //- {{ contactInfoForm.email.$error }}

    .form-group
      label(for='fieldPhone', control-label) Phone
      input#fieldPhone.form-control(type='text', name='phone', ng-model='contactInfo.phone', ui-mask='(999) 999-9999', required='')
      p.help-block(ng-show="contactInfoForm.phone.$error.mask" class="error") Keep typing!
            
    p.help-block  {{ message }}

    .form-group.buttons
      button.btn.btn-md.btn-success(ng-click='resetContactInfo()', ng-disabled="!isContactInfoChanged(contactInfo)") Reset
      button.btn.btn-md.btn-primary(type='submit', ng-disabled="contactInfoForm.$invalid || !isContactInfoChanged(contactInfo)") Save changes

  h1 Change Password
  
  form(name='passwordForm', ng-submit='changePassword(passwordForm)', ng-controller='ChangePasswordCtrl', novalidate='')
    .form-group
      label Current Password
      input.form-control(type='password', name='password', ng-model='pw.oldPassword', required='', mongoose-error)
      
      p.help-block(ng-show='passwordForm.password.$error.mongoose')
        | {{ errors.other }}

    .form-group
      label New Password
      input.form-control(type='password', name='newPassword', ng-model='pw.newPassword', ng-minlength='8', required='')

      p.help-block(ng-show='(passwordForm.newPassword.$error.minlength || passwordForm.newPassword.$error.required) && (passwordForm.newPassword.$dirty || submitted)')
        | Password must be at least 8 characters.

    .form-group
      label Re-type Password
      input.form-control(type='password', name='retypePassword', ng-model='pw.retypePassword', required='', match-password='')

      p.help-block(ng-show='passwordForm.retypePassword.$error.matchPassword' )
        | Passwords do not match.

    p.help-block  {{ message }}

    .form-group.buttons
      button.btn.btn-sm.btn-success(ng-click='clearPassword(passwordForm)', ng-disabled="passwordForm.$pristine") Clear
      button.btn.btn-sm.btn-danger(type='submit', ng-disabled="passwordForm.$invalid") Change Password
